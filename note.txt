// Logic.js

// Helper function to calculate the frequency of each die value
function frequency(dice) {
  const freq = Array(7).fill(0); // There are 6 possible dice values, index 0 unused
  dice.forEach(value => {
    freq[value]++;
  });
  return freq;
}

function onePairPoints(dice) {
  const freq = frequency(dice);
  let sum = 0;
  for (let i = 0; i < freq.length; i++) {
    if (freq[i] >= 2) {
      sum = i * 2;
    }
  }
  return sum;
}

// Other point calculation functions (twoPairPoints, threeSamePoints, etc.) go here, similar to the onePairPoints function

function terningeBillederVis(slag, holdArray) {
  let i = 0;

  slag.forEach((element) => {
    if (holdArray[i]) {
      const terning = document.getElementById(`img${i + 1}`);
      if (terning) {
        terning.src = `img/terning${element}.png`;
      }
    }
    i++;
  });
}

function kastTerning(holdArray) {
  let slag = [0, 0, 0, 0, 0]; // Default array for 5 dice

  slag = slag.map((val, i) => {
    // If holding the die, do not reroll
    if (!holdArray[i]) {
      return Math.floor(Math.random() * 6) + 1;
    } else {
      return val; // val is the current value of the die, which is kept
    }
  });

  return slag;
}

// GUI.js

import { kastTerning, onePairPoints, ... } from "./Logic.js"; // Import other functions similarly

let input = document.querySelector("input");
let terningeBilleder = document.querySelectorAll(".terning"); // Use querySelectorAll for a NodeList
let button = document.getElementById("kastTerninger");
let myHoldArray = [false, false, false, false, false]; // Assume no dice are held at the start

button.onclick = function () {
  let dice = kastTerning(myHoldArray);
  terningeBillederVis(dice, myHoldArray);

  // Update the scores
  input.value = onePairPoints(dice);
  // Update the input values for other scores as well using the other functions
};

// Attach click event listeners to dice for holding functionality
terningeBilleder.forEach((die, index) => {
  die.addEventListener('click', function() {
    myHoldArray[index] = !myHoldArray[index]; // Toggle hold state
    die.classList.toggle('held'); // Apply a CSS class to indicate that the die is held
  });
});

export { terningeBillederVis, kastTerning }; // Export functions if needed elsewhere
